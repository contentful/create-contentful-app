version: 2.1

environment: &base-env
  NPM_CONFIG_PROGRESS: 'false'
  NPM_CONFIG_LOGLEVEL: warn

executors:
  node-container-lts:
    docker:
      - image: node:12
        environment: *base-env

  node-container-next-lts:
    docker:
      - image: node:14
        environment: *base-env

  node-container-latest:
    docker:
      - image: node:15
        environment: *base-env

commands:
  lint-and-test:
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Run Linter
          command: npm run lint
      - run:
          name: Run Tests
          command: npm t

  test-built-app:
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Link package
          command: npm link
      - run:
          name: Run Tests
          environment:
            MODE: 'ci'
          command: |
            PROJECT=test-$(date +%s)
            mkdir "${TMPDIR}/${PROJECT}"
            cd "${TMPDIR}/${PROJECT}"
            npx --no-install @contentful/create-contentful-app init test
            cd test
            npm t

jobs:
  dependency-check:
    executor: node-container-lts
    steps:
      - checkout
      - run:
          name: Create Dependency Check sandbox
          command: mkdir -p ./dependency-check
      - run:
          name: Create Package JSON
          command: node ./scripts/dependency-check/create-manifest-from-template
      - run:
          name: Check Outdated
          working_directory: ./dependency-check
          command: (npm outdated --json || true) > ./outdated.json
      - run:
          name: Create new template
          command: node ./scripts/dependency-check/create-template-from-outdated
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Link package
          command: npm link
      - run:
          name: Run Tests and Produce Reports
          command: |
            FORMER_CWD="$(pwd)"
            PROJECT=test-$(date +%s)
            mkdir "${TMPDIR}/${PROJECT}"
            cd "${TMPDIR}/${PROJECT}"
            npx --no-install @contentful/create-contentful-app init test
            cd test
            (npm t || true) 1>"${FORMER_CWD}/dependency-check/test-report" 2>&1
          environment:
            MODE: 'local'
      - run:
          name: Create Pull Request
          command: npm install @octokit/rest@18 simple-git@2 && node ./scripts/dependency-check/create-pull-request
      - run:
          name: Cleanup
          command: rm -rf ./dependency-check

  lint-and-test-lts:
    executor: node-container-lts
    steps:
      - lint-and-test

  lint-and-test-next-lts:
    executor: node-container-next-lts
    steps:
      - lint-and-test

  lint-and-test-latest:
    executor: node-container-latest
    steps:
      - lint-and-test

  test-built-app-lts:
    executor: node-container-lts
    steps:
      - test-built-app

  test-built-app-next-lts:
    executor: node-container-next-lts
    steps:
      - test-built-app

  test-built-app-latest:
    executor: node-container-latest
    steps:
      - test-built-app

workflows:
  version: 2

  scheduled-dependency-check:
    triggers:
      - schedule:
          # Run each day at midnight
          cron: '0 0 * * *'
          filters:
            branches:
              only: master
    jobs:
      - dependency-check

  test:
    jobs:
      - lint-and-test-lts
      - test-built-app-lts:
          requires:
            - lint-and-test-lts

      - lint-and-test-next-lts
      - test-built-app-next-lts:
          requires:
            - lint-and-test-next-lts

      - lint-and-test-latest
      # npx currently fails with the latest node version (15.3.0)
      # - test-built-app-latest:
      #     requires:
      #       - lint-and-test-latest
