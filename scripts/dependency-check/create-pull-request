#! /bin/usr/env node

const { Octokit } = require('@octokit/rest');
const simpleGit = require('simple-git');

const { printErrorAndExit, ROOT_PATH, printSuccess, TEMPLATE_PATH, TEST_REPORT_PATH } = require('./utils');

const getCompatibilityBadge = (report) => {
  const testLine = report.split('\n').find(i => i.startsWith('Tests:'))

  const [_, passed, total] = /(\d) passed, (\d) total/.exec(testLine);
  const compatibilityScore = (Number.parseInt(passed) * 100) / Number.parseInt(total);

  const compatibilityColor = compatibilityScore === 100
    ? 'green'
    : compatibilityScore > 80
      ? 'yellow'
      : 'red'

  return `https://img.shields.io/badge/compatibility-${compatibilityScore}%25-${compatibilityColor}`
}

const createPullRequestMessage = (report) => `
Bumps dependencies in \`template.json\` with most up to date versions as of today.

![compatibility score](${getCompatibilityBadge(report)})

<details>
<summary>Test Report</summary>
<pre>
${report}
</pre>
</details>
`

const githubClient = new Octokit({
  auth: process.env.GITHUB_ACCESS_TOKEN
});

const gitClient = simpleGit(ROOT_PATH);

(async function main() {
  const diffSummary = await gitClient.diffSummary();

  if (diffSummary.files.length === 0) {
    printSuccess('Dependencies are up to date! Not creating a pull request');
    process.exit(0);
  }

  const branch = `chore/update-dependencies-${Date.now()}`

  await gitClient
    .addConfig('user.name', 'Dependency Checker')
    .addConfig('user.email', 'dependency-checker@contentful.org')

  await gitClient.checkoutBranch(branch, 'master')

  await gitClient.add([TEMPLATE_PATH])

  await gitClient.commit('chore(deps): update dependencies')

  await gitClient.push(['-u', 'origin', branch])

  const testReport = validateAndRead(TEST_REPORT_PATH)

  await githubClient.pulls.create({
    owner: 'contentful',
    repo: 'create-contentful-app',
    title: `chore(deps): daily update 'template.json'`,
    head: branch,
    base: 'master',
    body: createPullRequestMessage(testReport)
  });
})().catch(e => {
  printErrorAndExit('Unable to create a pull request', e);
});
